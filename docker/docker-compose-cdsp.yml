name: cdsp

services:

# Apache IoTDB acting as VSS Data Store
  iotdb-service:
    image: apache/iotdb:1.2.2-standalone
    container_name: iotdb-service
    restart: on-failure:3
    ports:
      - "6667:6667"
    environment:
      - cn_internal_address=iotdb-service
      - cn_internal_port=10710
      - cn_consensus_port=10720
#      - cn_seed_config_node=iotdb-service:10710
      - cn_target_config_node_list=iotdb-service:10710
      - dn_rpc_address=iotdb-service
      - dn_internal_address=iotdb-service
      - dn_rpc_port=6667
      - dn_mpp_data_exchange_port=10740
      - dn_schema_region_consensus_port=10750
      - dn_data_region_consensus_port=10760
      - dn_seed_config_node=iotdb-service:10710
#      - dn_seed_config_node=iotdb-service:10710
      - dn_target_config_node_list=iotdb-service:10710
    volumes:
        - ./data:/iotdb/data
        - ./logs/iotdb:/iotdb/logs
    healthcheck: 
      test: [ "CMD", "./start-cli.sh", "-h", "iotdb-service", "-p", "6667", "-u", "root", "-pw", "root", "-e", "SHOW DATABASES;" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
      start_interval: 5s


# Information Layer Server exposing websocket API
  information-layer:
    build:
      context: ../cdsp/information-layer
      dockerfile: Dockerfile
    container_name: information-layer
    ports:
      - "8080:8080" 
    volumes:
      - ./logs/information-layer:/app/logs
    env_file:
      - .env

  # RDFox Initialization (run once)
  rdfox-init:
    image: oxfordsemantic/rdfox-init:latest
    container_name: rdfox-init
    platform: linux/amd64
    volumes:
      - ${RDFOX_LIC_PATH}:/opt/RDFox/RDFox.lic  # License file on host
      - rdfox-server-directory:/home/rdfox/.RDFox
    environment:
      - RDFOX_ROLE=root
      - RDFOX_PASSWORD=admin
    command: |
      -persistence file
    restart: "no"

  # RDFox Daemon (persistent service)
  rdfox-service:
    image: oxfordsemantic/rdfox:latest
    container_name: rdfox-service
    platform: linux/amd64
    depends_on:
      rdfox-init:
        condition: service_completed_successfully
    ports:
      - "12110:12110"
    volumes:
      - ${RDFOX_LIC_PATH}:/opt/RDFox/RDFox.lic  # License file on host
      - rdfox-server-directory:/home/rdfox/.RDFox
    environment:
      - RDFOX_ROLE=root
      - RDFOX_PASSWORD=admin
    command: daemon
    deploy:
      resources:
        limits:
          memory: 8g
          cpus: "2.0"
    restart: "always"

 # VISSR acting as VISS Data Server

  tmp:
   image: busybox
   container_name: vissr_container_volumes
   user: root
   command: >
     chmod -R 777 /tmp/docker/
   volumes:
     - /tmp/docker/

  redis:
   image: redis
   container_name: app_redis
   privileged: true
   user: root
   restart: on-failure:3
   command: redis-server /etc/redis.conf
   volumes:
     - ../cdsp/vissr/redis/redis.conf:/etc/redis.conf
   volumes_from:
     - tmp

  vissv2server:
   container_name: vissv2server
   depends_on:
     - redis
     - iotdb-service
   restart: on-failure:3
   build:
     context: ../cdsp/vissr  # context set to repo root
     dockerfile: Dockerfile.rlserver
     target: vissv2server
   entrypoint: [ /app/vissv2server,-s,apache-iotdb]
   ports:
     - "0.0.0.0:8081:8081"
     - "127.0.0.1:8888:8888"
     - "0.0.0.0:8887:8887"
     - "0.0.0.0:8600:8600"
   volumes:
     - ./logs/vssr:/app/logs
   volumes_from:
     - tmp

# Knowledge Layer Server 
  knowledge-layer:
    build:
      context: ../cdsp/knowledge-layer
      dockerfile: Dockerfile
    container_name: knowledge-layer
    entrypoint: ["/src/build/bin/reasoner_client"]

volumes:
  rdfox-server-directory:
